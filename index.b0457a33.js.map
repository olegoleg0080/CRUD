{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const refs = {\n  postsContainer: document.querySelector('.posts-container'),\n  form: document.querySelector('form'),\n  del: document.querySelector('.delete'),\n};\nconst BASE__URL = 'http://localhost:3000/posts';\nfetch(BASE__URL)\n  .then(response => response.json())\n  .then(posts => {\n    let html = '';\n    posts.forEach(post => {\n      const postHTML = createPostHTML(post);\n      html += postHTML;\n    });\n    refs.postsContainer.insertAdjacentHTML('beforeend', html);\n  })\n  .catch(error => {\n    console.error('Ошибка при получении постов:', error);\n  });\nrefs.postsContainer.addEventListener('click', delCard);\n\n//* ===\nfunction delCard(event) {\n  if (event.target.classList.contains('delete')) {\n    const card = event.target.closest('.container-card');\n    const id = card.dataset.id;\n    deletePost(id).then(() => {\n      card.remove();\n    });\n  }\n}\nfunction deletePost(id) {\n  const options = {\n    method: 'DELETE',\n  };\n  return fetch(`${BASE__URL}/${id}`, options);\n}\n//* ===\n\n//* ===\nfunction getPosts() {\n  fetch(BASE__URL)\n    .then(response => response.json())\n    .then(posts => {\n      refs.postsContainer.innerHTML = '';\n      let html = '';\n      posts.forEach(post => {\n        const postHTML = createPostHTML(post);\n        html += postHTML;\n      });\n      refs.postsContainer.insertAdjacentHTML('beforeend', html);\n    })\n    .catch(error => {\n      console.error('Ошибка при получении постов:', error);\n    });\n}\nfunction createPostHTML(post) {\n  const aa = `<div class=\"container-card\" data-id=\"${post.id}\">\n    <p>Title = ${post.post.title}</p>\n    <p>Body = ${post.post.body}</p>\n    <button class=\"delete\">Удалить</button>\n    <button class=\"edit\">Редактировать</button>\n    </div>`;\n\n  return aa;\n}\ngetPosts();\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const formData = new FormData(refs.form);\n  const title = formData.get('name');\n  const body = formData.get('text');\n  if (!title || !body) {\n    alert('Пожалуйста, заполните все поля');\n    return;\n  }\n  addPost({\n    userId: 1,\n    title,\n    body,\n  }).then(() => {\n    getPosts();\n  });\n});\n//* ===\n\nfunction addPost(post) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({ post }),\n  };\n  return fetch(`${BASE__URL}`, options).then(res => res.json());\n}\nfunction openModal(post) {\n  const modal = document.querySelector('.modal');\n  const titleInput = document.querySelector('.modal input[name=\"title\"]');\n  const bodyInput = document.querySelector('.modal textarea[name=\"body\"]');\n  const saveButton = document.querySelector('.modal button.save');\n\n  titleInput.value = post.post.title;\n  bodyInput.value = post.post.body;\n\n  saveButton.onclick = () => {\n    post.post.title = titleInput.value;\n    post.post.body = bodyInput.value;\n\n    updatePost(post).then(() => {\n      getPosts(closeModal);\n    });\n  };\n\n  modal.style.display = 'block';\n}\nfunction closeModal() {\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'none';\n}\nfunction updatePost(post) {\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ post: post.post })\n  };\n  return fetch(`${BASE__URL}/${post.id}`, options);\n}\nfunction getPosts(callback) {\n  fetch(BASE__URL)\n    .then(response => response.json())\n    .then(posts => {\n      refs.postsContainer.innerHTML = '';\n      let html = '';\n      posts.forEach(post => {\n        const postHTML = createPostHTML(post);\n        html += postHTML;\n      });\n      refs.postsContainer.insertAdjacentHTML('beforeend', html);\n\n      if (callback) {\n        callback();\n      }\n    })\n    .catch(error => {\n      console.error('Ошибка при получении постов:', error);\n    });\n}\nrefs.postsContainer.addEventListener('click', event => {\n  if (event.target.classList.contains('edit')) {\n    const card = event.target.closest('.container-card');\n    const id = card.dataset.id;\n\n    getPost(id).then(post => {\n      openModal(post);\n    });\n  }\n});\nfunction getPost(id) {\n  return fetch(`${BASE__URL}/${id}`).then(response =>\n    response.json()\n  );\n}\n"],"names":["$1f0dc3b9307be026$var$refs","postsContainer","document","querySelector","form","del","$1f0dc3b9307be026$var$getPosts","fetch","then","response","json","posts","innerHTML","html","forEach","post","postHTML","$1f0dc3b9307be026$var$createPostHTML","insertAdjacentHTML","catch","error","console","id","title","body","$1f0dc3b9307be026$var$openModal","modal","titleInput","bodyInput","saveButton","value","onclick","options","method","headers","JSON","stringify","$1f0dc3b9307be026$var$updatePost","$1f0dc3b9307be026$var$closeModal","style","display","callback","addEventListener","event","target","classList","contains","card","closest","$1f0dc3b9307be026$var$deletePost","dataset","remove","preventDefault","formData","FormData","get","Accept","res","$1f0dc3b9307be026$var$addPost","userId","alert","$1f0dc3b9307be026$var$getPost"],"version":3,"file":"index.b0457a33.js.map"}
{"mappings":"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","sources":["src/index.js"],"sourcesContent":["const refs = {\n  postsContainer: document.querySelector('.posts-container'),\n  form: document.querySelector('form'),\n  del: document.querySelector('.delete'),\n};\nconst BASE__URL = 'http://localhost:3000/posts';\nfetch(BASE__URL)\n  .then(response => response.json())\n  .then(posts => {\n    let html = '';\n    posts.forEach(post => {\n      const postHTML = createPostHTML(post);\n      html += postHTML;\n    });\n    refs.postsContainer.insertAdjacentHTML('beforeend', html);\n  })\n  .catch(error => {\n    console.error('Ошибка при получении постов:', error);\n  });\nrefs.postsContainer.addEventListener('click', delCard);\n\n//* ===\nfunction delCard(event) {\n  if (event.target.classList.contains('delete')) {\n    const card = event.target.closest('.container-card');\n    const id = card.dataset.id;\n    deletePost(id).then(() => {\n      card.remove();\n    });\n  }\n}\nfunction deletePost(id) {\n  const options = {\n    method: 'DELETE',\n  };\n  return fetch(`${BASE__URL}/${id}`, options);\n}\n//* ===\n\n//* ===\nfunction getPosts() {\n  fetch(BASE__URL)\n    .then(response => response.json())\n    .then(posts => {\n      refs.postsContainer.innerHTML = '';\n      let html = '';\n      posts.forEach(post => {\n        const postHTML = createPostHTML(post);\n        html += postHTML;\n      });\n      refs.postsContainer.insertAdjacentHTML('beforeend', html);\n    })\n    .catch(error => {\n      console.error('Ошибка при получении постов:', error);\n    });\n}\nfunction createPostHTML(post) {\n  const aa = `<div class=\"container-card\" data-id=\"${post.id}\">\n    <p>Title = ${post.post.title}</p>\n    <p>Body = ${post.post.body}</p>\n    <button class=\"delete\">Удалить</button>\n    <button class=\"edit\">Редактировать</button>\n    </div>`;\n\n  return aa;\n}\ngetPosts();\nrefs.form.addEventListener('submit', event => {\n  event.preventDefault();\n  const formData = new FormData(refs.form);\n  const title = formData.get('name');\n  const body = formData.get('text');\n  if (!title || !body) {\n    alert('Пожалуйста, заполните все поля');\n    return;\n  }\n  addPost({\n    userId: 1,\n    title,\n    body,\n  }).then(() => {\n    getPosts();\n  });\n});\n//* ===\n\nfunction addPost(post) {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n    },\n    body: JSON.stringify({ post }),\n  };\n  return fetch(`${BASE__URL}`, options).then(res => res.json());\n}\nfunction openModal(post) {\n  const modal = document.querySelector('.modal');\n  const titleInput = document.querySelector('.modal input[name=\"title\"]');\n  const bodyInput = document.querySelector('.modal textarea[name=\"body\"]');\n  const saveButton = document.querySelector('.modal button.save');\n\n  titleInput.value = post.post.title;\n  bodyInput.value = post.post.body;\n\n  saveButton.onclick = () => {\n    post.post.title = titleInput.value;\n    post.post.body = bodyInput.value;\n\n    updatePost(post).then(() => {\n      getPosts(closeModal);\n    });\n  };\n\n  modal.style.display = 'block';\n}\nfunction closeModal() {\n  const modal = document.querySelector('.modal');\n  modal.style.display = 'none';\n}\nfunction updatePost(post) {\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ post: post.post })\n  };\n  return fetch(`${BASE__URL}/${post.id}`, options);\n}\nfunction getPosts(callback) {\n  fetch(BASE__URL)\n    .then(response => response.json())\n    .then(posts => {\n      refs.postsContainer.innerHTML = '';\n      let html = '';\n      posts.forEach(post => {\n        const postHTML = createPostHTML(post);\n        html += postHTML;\n      });\n      refs.postsContainer.insertAdjacentHTML('beforeend', html);\n\n      if (callback) {\n        callback();\n      }\n    })\n    .catch(error => {\n      console.error('Ошибка при получении постов:', error);\n    });\n}\nrefs.postsContainer.addEventListener('click', event => {\n  if (event.target.classList.contains('edit')) {\n    const card = event.target.closest('.container-card');\n    const id = card.dataset.id;\n\n    getPost(id).then(post => {\n      openModal(post);\n    });\n  }\n});\nfunction getPost(id) {\n  return fetch(`${BASE__URL}/${id}`).then(response =>\n    response.json()\n  );\n}\n"],"names":["$b8f9b7833fa37166$var$refs","postsContainer","document","querySelector","form","del","$b8f9b7833fa37166$var$BASE__URL","$b8f9b7833fa37166$var$getPosts","fetch","then","response","json","posts","innerHTML","html","forEach","post","postHTML","$b8f9b7833fa37166$var$createPostHTML","insertAdjacentHTML","catch","error","console","concat","id","title","body","$b8f9b7833fa37166$var$openModal","modal","titleInput","bodyInput","saveButton","value","onclick","options","method","headers","JSON","stringify","$b8f9b7833fa37166$var$updatePost","$b8f9b7833fa37166$var$closeModal","style","display","callback","addEventListener","event","target","classList","contains","card","closest","$b8f9b7833fa37166$var$deletePost","dataset","remove","preventDefault","formData","FormData","get","userId","Accept","res","alert","$b8f9b7833fa37166$var$getPost"],"version":3,"file":"index.d50161f1.js.map"}